{"version":3,"sources":["components/Persons.js","components/Filter.js","services/personService.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["Persons","personsToShow","confirmDeletion","map","p","name","number","onClick","id","Filter","newFilter","setNewFilter","value","onChange","event","target","baseUrl","getAll","a","request","axios","get","response","data","create","newObject","post","update","put","remove","delete","PersonForm","persons","newName","newNumber","setPersons","setErrorMessage","setMessageType","setNewName","setNewNumber","onSubmit","preventDefault","some","window","confirm","personToReplace","find","personObject","personService","then","updatedPerson","setTimeout","catch","error","console","log","filter","returnedPerson","concat","type","Notification","messageType","message","style","color","border","padding","backgroundColor","fontSize","App","useState","errorMessage","useEffect","initialPersons","toUpperCase","includes","person","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3dcb308b.chunk.js","sourcesContent":["\nimport React from 'react'\n\nconst Persons=({personsToShow,confirmDeletion})=>\n{\n  return(  \n    personsToShow.map(p=>\n    <p key={p.id}>\n      {p.name}   {p.number} \n      <button onClick={()=>{confirmDeletion(p)}}>delete</button>\n    </p>\n    ))\n} \n\nexport default Persons","import React from 'react'\n\nconst Filter=({newFilter,setNewFilter})=>{\n\n    const handleFilterChange=(event)=>{setNewFilter(event.target.value)}\n\n    return(\n    <form>\n        <div>filter shown with: <input value={newFilter} onChange={handleFilterChange}/></div>\n    </form>)\n\n}\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = async () => {\n  const request = axios.get(baseUrl)\n  const response = await request\n  return response.data\n}\n\nconst create = async (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  const response = await request\n  return response.data\n  \n}\n\nconst update = async (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  const response = await request\n  return response.data\n  \n}\n\nconst remove = (p)=>{\n  \n  axios.delete(`${baseUrl}/${p.id}`)\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll,create,update,remove}","import React from 'react'\nimport personService from '../services/personService'\n\n\nconst PersonForm=({persons,newName,newNumber,setPersons,setErrorMessage,setMessageType,setNewName,setNewNumber})=>{\n\n\n    const addPerson=(event)=>{\n        event.preventDefault()\n     \n        if (persons.some(p=>p.name===newName)){ // if name existed:\n\n         if( window.confirm(`${newName} is already added to phonebook,repalce the old number with a new one?`))\n         \n         {\n           //if duplicated and want to add a new number, update\n\n          const personToReplace=persons.find(p=>p.name===newName)\n          \n\n          const personObject={\n            name:newName,\n            number:newNumber,\n            id:personToReplace.id\n          }\n\n          personService\n          .update(personToReplace.id,personObject)\n          .then(updatedPerson=>{\n            setPersons(persons.map(p=>p.id!==personToReplace.id? p :updatedPerson))\n\n            setMessageType('success')\n            setErrorMessage(`Updated ${newName} with new number:${newNumber}`)\n            setTimeout(()=>{setErrorMessage('')},5000)\n \n          })\n\n            // if item to update is already deleted at the server:\n\n\n            .catch(error => {\n              console.log(\"err\",error)\n              setPersons(persons.filter(p=>p.id!==personToReplace.id))\n              setErrorMessage(`Person '${personObject.name}' was already removed from server`)\n              setMessageType('fail')\n              setTimeout(()=>{setErrorMessage('')},5000)\n            })// at this point, the only error is \"item to modify is already deleted. will fix it later in the course.\"\n\n      \n            \n         }\n        //if cancelled update : do nothing\n        }\n\n\n\n        else{//if no duplication , just add new person\n        \n        const personObject={\n          name:newName,\n          number:newNumber,\n         \n        }\n        \n        personService\n        .create(personObject)\n        .then(returnedPerson=>{setPersons(persons.concat(returnedPerson))\n        \n          setMessageType('success')\n          setErrorMessage(`Added ${newName} .`)\n          setTimeout(()=>{setErrorMessage('')},5000)\n  \n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error=>{          //added validation notification after completing part3\n          console.log(error.response.data)\n          setMessageType('fail')\n          setErrorMessage(`${error.response.data.error}`)\n          setTimeout(()=>{setErrorMessage('')},5000)\n        })\n\n\n        \n      }} \n\n\n\n      const handlePersonChange=(event)=>{setNewName(event.target.value)}\n    \n      const handleNumberChange=(event)=>{setNewNumber(event.target.value)}\n    \n\n    return(\n        <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handlePersonChange}/>\n        </div>\n        <div>number: <input value={newNumber} onChange={handleNumberChange}/></div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>)\n\n    }\n\n    export default PersonForm","const Notification = ({ messageType, message }) => {\n\nconst successMessageStyle={\n    color: 'green',\n    border:'solid',\n    padding:10,\n    backgroundColor:'lightgrey',\n    fontSize: 16\n}\n\nconst failMessageStyle={\n    color: 'red',\n    border:'solid',\n    padding:10,\n    backgroundColor:'lightgrey',\n    fontSize: 16\n}\n\n\n    if (message) {\n\n    if (messageType==='success'){\n    return (\n      <div style={successMessageStyle}>\n        {message}\n      </div>\n    )}\n\n    if(messageType==='fail'){\n      return(\n        <div style={failMessageStyle}>\n        {message}\n      </div>\n      )\n    }\n\n    else return (<div>{message}</div>)\n    \n  }\n\n  else return (\" \") //if message is blank\n}\n\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport personService from './services/personService'\n\n\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('insert a person')\n  const [ newNumber, setNewNumber ] = useState('insert a number')\n  const [ newFilter,setNewFilter]= useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [messageType,setMessageType] = useState('')\n\n// messageType has two states: 'success' and 'fail'\n// success message will be in green, fail message in red\n\n  useEffect(() => {\n    personService\n    .getAll()\n    .then(initialPersons=>{\n      setPersons(initialPersons)\n    })\n  }, [])     //fetch person list once\n  \n\n\n  //filter person case-insensitive\n  const personsToShow= (newFilter==='')\n  ?persons\n  :persons.filter(p=> p.name.toUpperCase().includes(newFilter.toUpperCase()))\n  \n\n\n\n  \n  const confirmDeletion=(p)=>{\n    if(window.confirm(`Delete ${p.name}?`)){\n      personService\n      .remove(p)\n      \n    \n    setPersons(persons.filter(person=>person.id!==p.id))\n    setMessageType('success')\n    setErrorMessage(`Deletion of ${p.name} completed!`)\n    setTimeout(()=>{setErrorMessage('')},5000)\n    \n    }}\n\n\n  return (\n    <div>\n     \n      <h2>Phonebook</h2>\n      <Notification messageType={messageType} message={errorMessage} />\n      <br/>\n      <Filter newFilter={newFilter} setNewFilter={setNewFilter}/>\n\n      <h2>add a new</h2>\n  \n      <PersonForm newName={newName} newNumber={newNumber} persons={persons} \n      setNewName={setNewName} setNewNumber={setNewNumber} setPersons={setPersons}\n      errorMessage={errorMessage} setErrorMessage={setErrorMessage}\n      messageType={messageType} setMessageType={setMessageType}/>\n      \n      <h2>Numbers</h2>\n    <Persons personsToShow={personsToShow} confirmDeletion={confirmDeletion}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}